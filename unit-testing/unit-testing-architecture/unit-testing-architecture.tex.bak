\chapter{ Unit Testing Architecture }

In any given UI application, the following should be considered as appropriate architecture.

\begin{enumerate}
  \item Testing structure
  \item Assertion functions
  \item Generate, display and watch test results
  \item Generate and compare snapshots of component and data structures to make
  sure changes from previous runs are intended
  \item Provide mocks, spies, and stubs
  \item Generate code coverage reports
  \item Provide a browser or browser-like environment with a control on their
   scenarios execution
\end{enumerate}

In the previous chapter we discussed using Jest for the large part of our application. Jest should ideally be used across the app. The truth is that Jest was built for a mono-repo. In particular, when it comes to running parallel unit tests. In addition, the way the view shows only the test of the component that has been updated.