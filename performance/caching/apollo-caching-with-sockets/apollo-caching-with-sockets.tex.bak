\chapter{ Apollo Caching with Sockets }

The value of being aware of architecture is twofold. One is that one has the option of preventing future catastrophes.

You will most like face a scenario where you're required to put together a solution within a time intensive setting. Caching with Apollo will help you in this scenario. 

This is because you might include caching, but realize that sockets is something that we would like included with the app. The development team might decide to throw away caching, so that data can be updated. 

\section{ Apollo Caching with Sockets }
\mybox{One side note, is that it will generally be a requirement that will come from the frontend first, that they will need to use something like sockets. However, the backend will also need to setup websockets in order to get everything to work as expected.}

It should be noted that GraphQL offers three types of data queries:
\begin{itemize}
  \item Query
  \item Mutation
  \item Subscriptions
\end{itemize}

Subscriptions in particular is very similar to web sockets. 

The package at this point which makes the most sense is
\href{https://github.com/apollographql/subscriptions-transport-ws}{subscriptions-transport-ws}
